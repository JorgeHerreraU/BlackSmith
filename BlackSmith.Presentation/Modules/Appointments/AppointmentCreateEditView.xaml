<UserControl x:Class="BlackSmith.Presentation.Modules.Appointments.AppointmentCreateEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:conv="clr-namespace:BlackSmith.Presentation.Converters"
             mc:Ignorable="d"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:themes1="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=DotNetProjects.Wpf.Extended.Toolkit"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <conv:BooleanVisibilityConverter x:Key="VisConverter" />
        <conv:BooleanVisibilityConverter x:Key="NegVisConverter" Negate="True" />
        <Style TargetType="{x:Type xctk:DateTimePicker}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type xctk:DateTimePicker}">
                        <Border CornerRadius="5" BorderBrush="#3D3D4C" BorderThickness="1" Margin="1">
                            <Grid>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <xctk:ButtonSpinner x:Name="PART_Spinner" AllowSpin="{TemplateBinding AllowSpin}"
                                                        BorderThickness="{TemplateBinding BorderThickness}"
                                                        Background="{TemplateBinding Background}" IsTabStop="False"
                                                        ShowButtonSpinner="{TemplateBinding ShowButtonSpinner}">
                                        <xctk:WatermarkTextBox x:Name="PART_TextBox" AcceptsReturn="False"
                                                               FontWeight="{TemplateBinding FontWeight}"
                                                               FontStyle="{TemplateBinding FontStyle}"
                                                               FontStretch="{TemplateBinding FontStretch}"
                                                               FontSize="{TemplateBinding FontSize}"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                               MinWidth="20" Padding="0"
                                                               TextAlignment="{TemplateBinding TextAlignment}"
                                                               TextWrapping="NoWrap"
                                                               Margin="5"
                                                               Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                               TabIndex="{TemplateBinding TabIndex}"
                                                               WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                                               Watermark="{TemplateBinding Watermark}"
                                                               Foreground="{TemplateBinding Foreground}">
                                            <xctk:WatermarkTextBox.Template>
                                                <ControlTemplate TargetType="{x:Type xctk:WatermarkTextBox}">
                                                    <Grid>
                                                        <Border x:Name="Border"
                                                                BorderBrush="Transparent"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                Background="{TemplateBinding Background}"
                                                                CornerRadius="0" />
                                                        <Border x:Name="MouseOverVisual"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="0" Opacity="0">
                                                            <Border.BorderBrush>
                                                                <SolidColorBrush Color="#3D3D4C" />
                                                            </Border.BorderBrush>
                                                        </Border>
                                                        <Border x:Name="FocusVisual"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="0" Opacity="0">
                                                            <Border.BorderBrush>
                                                                <SolidColorBrush Color="#3D3D4C" />
                                                            </Border.BorderBrush>
                                                        </Border>
                                                        <ScrollViewer x:Name="PART_ContentHost"
                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                      Background="#3D3D4C"
                                                                      BorderBrush="Transparent"
                                                                      BorderThickness="0" />
                                                        <ContentPresenter x:Name="PART_WatermarkHost"
                                                                          ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                                                          Content="{TemplateBinding Watermark}"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          IsHitTestVisible="False"
                                                                          Margin="{TemplateBinding Padding}"
                                                                          Visibility="Collapsed"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsFocused" Value="False" />
                                                                <Condition Property="Text" Value="" />
                                                            </MultiTrigger.Conditions>
                                                            <Setter Property="Visibility"
                                                                    TargetName="PART_WatermarkHost" Value="Visible" />
                                                        </MultiTrigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" TargetName="MouseOverVisual"
                                                                    Value="1" />
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Opacity" TargetName="FocusVisual"
                                                                    Value="1" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="BorderBrush" TargetName="Border"
                                                                    Value="#FFADB2B5" />
                                                            <!--I changed Background setter value to White here-->
                                                            <Setter Property="Background" TargetName="Border"
                                                                    Value="White" />
                                                            <Setter Property="Foreground"
                                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </xctk:WatermarkTextBox.Template>
                                        </xctk:WatermarkTextBox>
                                    </xctk:ButtonSpinner>

                                    <ToggleButton x:Name="_calendarToggleButton"
                                                  Background="{x:Null}" Grid.Column="1"
                                                  IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.IsHitTestVisible>
                                            <Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <xctk:InverseBoolConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ToggleButton.IsHitTestVisible>
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Grid SnapsToDevicePixels="True">
                                                                <xctk:ButtonChrome x:Name="ToggleButtonChrome"
                                                                    CornerRadius="0,2.75,2.75,0"
                                                                    InnerCornerRadius="0,1.75,1.75,0"
                                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                                    RenderPressed="{TemplateBinding IsPressed}"
                                                                    BorderBrush="#3D3D4C">
                                                                    <xctk:ButtonChrome.Background>
                                                                        <SolidColorBrush Color="#3D3D4C" />
                                                                    </xctk:ButtonChrome.Background>
                                                                    <xctk:ButtonChrome.BorderThickness>
                                                                        <Thickness Left="0" Bottom="0" Right="0"
                                                                            Top="0" />
                                                                    </xctk:ButtonChrome.BorderThickness>
                                                                </xctk:ButtonChrome>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <ContentPresenter
                                                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                        Content="{TemplateBinding Content}"
                                                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                        HorizontalAlignment="Stretch"
                                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                        VerticalAlignment="Stretch" />
                                                                    <Grid x:Name="arrowGlyph"
                                                                          Grid.Column="1"
                                                                          IsHitTestVisible="False"
                                                                          Margin="5">
                                                                        <Path
                                                                            Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z"
                                                                            Fill="White"
                                                                            Height="4"
                                                                            Width="7" />
                                                                    </Grid>
                                                                </Grid>
                                                            </Grid>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                </Grid>

                                <Popup IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}"
                                       StaysOpen="False">
                                    <Border>
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="#3D3D4C" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="#3D3D4C" />
                                        </Border.Background>
                                        <StackPanel Background="{x:Null}">
                                            <Calendar x:Name="Part_Calendar"
                                                      SelectedDate="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                      BorderThickness="0"
                                                      DisplayDate="2011-06-28"
                                                      Background="#3D3D4C" />
                                            <xctk:TimePicker x:Name="Part_TimeUpDown" Format="ShortTime"
                                                             ShowButtonSpinner="False"
                                                             BorderBrush="Transparent"
                                                             Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Foreground="White"
                                                             Maximum="{Binding Maximum, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Minimum="{Binding Minimum, RelativeSource={RelativeSource TemplatedParent}}"
                                                             WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}"
                                                             Watermark="{TemplateBinding TimeWatermark}"
                                                             Background="{x:Null}"
                                                             FontSize="20"
                                                             Style="{DynamicResource TimePickerStyle1}" />
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static themes1:ResourceKeys.ControlMouseOverBorderKey}}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                               Value="False" />
                                    <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}"
                                               Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}"
                                         Value="True">
                                <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                            </DataTrigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource {x:Static themes1:ResourceKeys.ControlSelectedBorderKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement"
                                        Value="{Binding ElementName=PART_TextBox}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ShowButtonSpinner" Value="False" />
                                    <Condition Property="ShowDropDownButton" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Spinner" Property="BorderThickness"
                                        Value="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CalendarButtonStyle" TargetType="CalendarDayButton"
               BasedOn="{StaticResource {x:Type CalendarDayButton}}">
            <Style.Setters>
                <Setter Property="Foreground" Value="White" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsBlackedOut" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Calendar}">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="#3D3D4C" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#3D3D4C" />
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="#FFF" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type Calendar}">
                        <Viewbox Width="300" Height="300">
                            <StackPanel x:Name="PART_Root"
                                        HorizontalAlignment="Center">
                                <CalendarItem x:Name="PART_CalendarItem"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}" />
                            </StackPanel>
                        </Viewbox>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <Grid Margin="0,0,-187,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid
            VerticalAlignment="Top"
            Margin="17,15,0,0"
            HorizontalAlignment="Left"
            DataContext="{Binding Appointment}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label VerticalAlignment="Center"
                   Grid.Row="0"
                   Margin="3"
                   HorizontalAlignment="Left"
                   Grid.Column="0"
                   Content="Title:" />
            <TextBox x:Name="Title"
                     Width="320"
                     VerticalAlignment="Center"
                     Text="{Binding Title, ValidatesOnNotifyDataErrors=True}"
                     Grid.Row="0"
                     Margin="3"
                     Height="35"
                     HorizontalAlignment="Left"
                     Grid.Column="1" />
            <Label VerticalAlignment="Center"
                   Grid.Row="1"
                   Margin="3"
                   HorizontalAlignment="Left"
                   Grid.Column="0"
                   Content="Description:" />
            <TextBox x:Name="Description"
                     Width="320"
                     VerticalAlignment="Center"
                     Text="{Binding Description, ValidatesOnNotifyDataErrors=True}"
                     Grid.Row="1"
                     Margin="3"
                     Height="35"
                     HorizontalAlignment="Left"
                     Grid.Column="1" />
            <Label VerticalAlignment="Top"
                   Grid.Row="2"
                   Margin="3 12 3 3"
                   HorizontalAlignment="Left"
                   Grid.Column="0"
                   Content="Date:" />
            <xctk:DateTimePicker
                ShowButtonSpinner="False"
                Background="#3D3D4C"
                Foreground="White"
                TextAlignment="Left"
                BorderBrush="Transparent"
                BorderThickness="0"
                Grid.Row="2"
                Grid.Column="1"
                Format="Custom"
                FormatString="yyyy-MM-dd HH:mm:ss"
                Value="{Binding Start}" />
        </Grid>
        <Grid Grid.Row="1">
            <Button Content="Save"
                    Command="{Binding SaveCommand}"
                    Visibility="{Binding EditMode, Converter={StaticResource VisConverter}}"
                    HorizontalAlignment="Left"
                    Margin="25,5,0,0"
                    VerticalAlignment="Top"
                    Width="75" />
            <Button Content="Add"
                    Command="{Binding SaveCommand}"
                    Visibility="{Binding EditMode, Converter={StaticResource NegVisConverter}}"
                    HorizontalAlignment="Left"
                    Margin="25,5,0,0"
                    VerticalAlignment="Top"
                    Width="75" />
            <Button Content="Cancel"
                    Command="{Binding CancelCommand}"
                    HorizontalAlignment="Left"
                    Margin="150,5,0,0"
                    VerticalAlignment="Top"
                    Width="75" />
        </Grid>
    </Grid>
</UserControl>